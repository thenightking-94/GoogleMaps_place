[{"D:\\work_profession_developer\\kontext\\kontext\\src\\reportWebVitals.js":"1","D:\\work_profession_developer\\kontext\\kontext\\src\\App.js":"2","D:\\work_profession_developer\\kontext\\kontext\\src\\index.js":"3","D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\RefreshToken.js":"4","D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\Dashboard.js":"5","D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\Login.js":"6","D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\Logout.js":"7","D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\ReduxComp.js":"8","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\index.js":"9","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\RefreshToken.js":"10","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\Dashboard.js":"11","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\Logout.js":"12","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\Login.js":"13","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\ReduxComp.js":"14","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\App.js":"15","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\reportWebVitals.js":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":497,"mtime":1606427399296,"results":"19","hashOfConfig":"18"},{"size":832,"mtime":1606421056870,"results":"20","hashOfConfig":"18"},{"size":712,"mtime":1606325392491,"results":"21","hashOfConfig":"18"},{"size":5669,"mtime":1606424548207,"results":"22","hashOfConfig":"18"},{"size":2188,"mtime":1606413295876,"results":"23","hashOfConfig":"18"},{"size":1036,"mtime":1606425301911,"results":"24","hashOfConfig":"18"},{"size":311,"mtime":1606406556530,"results":"25","hashOfConfig":"18"},{"size":860,"mtime":1607014416861,"results":"26","hashOfConfig":"27"},{"size":712,"mtime":1607014416858,"results":"28","hashOfConfig":"27"},{"size":9605,"mtime":1607200773159,"results":"29","hashOfConfig":"27"},{"size":1036,"mtime":1607014416857,"results":"30","hashOfConfig":"27"},{"size":2186,"mtime":1607202218595,"results":"31","hashOfConfig":"27"},{"size":311,"mtime":1607014416857,"results":"32","hashOfConfig":"27"},{"size":516,"mtime":1607014416853,"results":"33","hashOfConfig":"27"},{"size":375,"mtime":1607014416862,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gap22e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1icola6",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"D:\\work_profession_developer\\kontext\\kontext\\src\\reportWebVitals.js",[],"D:\\work_profession_developer\\kontext\\kontext\\src\\App.js",[],"D:\\work_profession_developer\\kontext\\kontext\\src\\index.js",[],"D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\RefreshToken.js",[],"D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\Dashboard.js",["71","72"],"D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\Login.js",[],"D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\Logout.js",[],"D:\\work_profession_developer\\kontext\\kontext\\src\\Components\\ReduxComp.js",["73"],"const initialState = {\r\n    name: '',\r\n    email: '',\r\n    img: ''\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    if (action.type == 'LOGGEDIN')\r\n        return ({ ...state, email: action.email, name: action.name, img: action.img });\r\n    return state;\r\n}\r\n\r\n\r\n\r\nexport default rootReducer;","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\index.js",[],["74","75"],"D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\RefreshToken.js",[],"D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\Dashboard.js",["76","77","78","79","80","81","82","83","84"],"import React, { useState, useEffect } from 'react';\r\nimport '../CSS/allcss.css';\r\nimport { Avatar, Grid, Typography } from '@material-ui/core';\r\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker } from 'react-google-maps';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n//seperate map component as a custom hook\r\nfunction Map() {\r\n    return (\r\n        <GoogleMap defaultZoom={10}\r\n            defaultCenter={{ lat: Number(localStorage.getItem('lat')), lng: Number(localStorage.getItem('lng')) }} >\r\n            <Marker position={{ lat: Number(localStorage.getItem('lat')), lng: Number(localStorage.getItem('lng')) }} />\r\n        </GoogleMap>\r\n    )\r\n}\r\n//rendering the map component as a seperate custom hook component\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\n//main method for rendering component\r\nfunction Dashboard(props) {\r\n\r\n    const [data, setdata] = useState([]);\r\n    const [dismaps, setdismaps] = useState([]);\r\n    const [LAT, setlat] = useState(null);\r\n    const [LNG, setlng] = useState(null);\r\n    const [showcities, setshowcities] = useState(true);\r\n    const [placeName, setplaceName] = useState(null);\r\n    const [force, setforce] = useState(null);\r\n    const [mobile, setmobile] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mydata = fetch('/artivatic.json',\r\n            {\r\n                method: 'GET', headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n        mydata.then(res => res.json()).then(json => setdata(json.states));\r\n\r\n        //using place Name to find out the lat and longitudes\r\n        const googleMapScript = document.createElement(\"script\");\r\n        googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`;\r\n        googleMapScript.async = true;\r\n        window.document.body.appendChild(googleMapScript);\r\n        googleMapScript.addEventListener(\"load\", () => {\r\n            getlang();\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (LAT && placeName)\r\n            localStorage.setItem('lat', LAT);\r\n        if (LNG && placeName)\r\n            localStorage.setItem('lng', LNG);\r\n\r\n        //using place Name to find out the lat and longitudes\r\n        if ((force == 'filled_with_new_district' && placeName) || (force == 'filled_with_new_city' && placeName)) {\r\n            const googleMapScript = document.createElement(\"script\");\r\n            googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`;\r\n            googleMapScript.async = true;\r\n            window.document.body.appendChild(googleMapScript);\r\n            googleMapScript.addEventListener(\"load\", () => {\r\n                getlang();\r\n            });\r\n        }\r\n    }, [LAT, LNG, placeName, force])\r\n\r\n    const pickCityGetDistrict = (str) => {\r\n        if (window.innerWidth > 768) {\r\n            setforce('filled_with_new_city');\r\n            setplaceName(str);\r\n        }\r\n        if (mobile)\r\n            setmobile(false);\r\n            \r\n        setshowcities(false);\r\n        var res = str, district = [];\r\n        if (data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i].state == res) {\r\n                    district = [...district, ...data[i].districts];\r\n                }\r\n            }\r\n        }\r\n        if (district)\r\n            setdismaps(district);\r\n    }\r\n    const getlang = () => {\r\n        let lat, lng, placeId;\r\n        //using Geocoder API to calculate the lat and longitudes from any place name\r\n        new window.google.maps.Geocoder().geocode(\r\n            { address: `${placeName}` },\r\n            function (results, status) {\r\n                if (status === window.google.maps.GeocoderStatus.OK) {\r\n                    placeId = results[0].place_id;\r\n                    lat = results[0].geometry.location.lat();\r\n                    lng = results[0].geometry.location.lng();\r\n                    setlat(Number(lat));\r\n                    setlng(Number(lng));\r\n                    setforce('got_new_data_for_new_map');\r\n                    //exclusive for mobile\r\n                    if (window.innerWidth < 768)\r\n                        setmobile(true)\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const logout_option = () => {\r\n        window.location.assign('/logout');\r\n    }\r\n    return (\r\n        <div>\r\n            <div id='nav'>\r\n\r\n                {window.innerWidth > 768\r\n                    && <div><Typography className='typo'><i style={{ color: 'black' }}>{props.match.params.name}</i>&nbsp;</Typography>\r\n                        <p style={{ fontFamily: 'ITC Charter', color: 'black' }}>{localStorage.getItem('email_id')}</p></div>\r\n                }\r\n                {window.innerWidth < 768 &&\r\n                    <div><Typography className='typo'><i style={{ color: 'black' }}>{props.match.params.name}</i>&nbsp;</Typography>\r\n                        <p style={{ fontFamily: 'ITC Charter', fontSize: '16px !important', color: 'black' }}>{localStorage.getItem('email_id')}</p></div>\r\n                }\r\n                {data &&\r\n                    <span style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginLeft: window.innerWidth > 768 ? '-150px' : '0' }}>\r\n                        <p onClick={() => {\r\n                            if (!showcities)\r\n                                setshowcities(true);\r\n                            if (showcities)\r\n                                setshowcities(false)\r\n                        }} id='explore_typo'>\r\n                            {window.innerWidth > 768 ? 'Choose to Explore' : 'Explore'}\r\n                        </p>\r\n                        {!showcities && <ArrowDropDownIcon />}\r\n                        {showcities && <ArrowDropUpIcon />}\r\n\r\n                    </span>\r\n                }\r\n                <Avatar title='Click to logout' onClick={logout_option} style={{ cursor: 'pointer' }} src={`${localStorage.getItem('img_url')}`} />\r\n            </div>\r\n\r\n            <div className='bgimage'>\r\n            </div>\r\n            {data && showcities &&\r\n                <Grid className='states_grid' container style={{ textAlign: 'center' }}>\r\n                    {data.map(item =>\r\n                        <Grid key={item.state} item sm={3} md={3} xs={6}>\r\n                            <Typography onClick={() => { pickCityGetDistrict(item.state) }} className='typo_states'>{item.state}</Typography>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            }\r\n            {\r\n                dismaps.length && !showcities && !mobile &&\r\n                <Grid container className='district_grid' style={{ textAlign: 'center' }}>\r\n                    {dismaps.map(item =>\r\n                        <Grid key={item} item sm={6} md={6} xs={6} style={{ textAlign: '-webkit-center' }}>\r\n                            <Typography onClick={() => {\r\n                                setplaceName(item);\r\n                                setforce('filled_with_new_district');\r\n                                if (window.innerWidth < 768)\r\n                                    setmobile(true);\r\n                            }} className='typo_districts'>{item}</Typography>\r\n                            <br /><br />\r\n                        </Grid>)}\r\n                </Grid>\r\n            }\r\n\r\n            {\r\n                placeName && !showcities && force != 'got_new_data_for_new_map' && ((window.innerWidth < 768 && mobile) || (window.innerWidth > 768)) &&\r\n                < Grid className={window.innerWidth > 768 ? 'map_Grid' : 'map_Grid_mobile'} style={{ width: \"95%\", height: \"95%\", textAlign: 'center', marginTop: '20%' }}>\r\n                    <Loader type=\"Bars\" color={window.innerWidth > 768 ? \"#e88d14\" : 'white'} height={80} width={80} />\r\n                </ Grid>\r\n            }\r\n            {placeName && !showcities && force == 'got_new_data_for_new_map' && ((window.innerWidth < 768 && mobile) || (window.innerWidth > 768)) &&\r\n                < Grid className={window.innerWidth > 768 ? 'map_Grid' : 'map_Grid_mobile'} style={{ width: \"95%\", height: \"95%\", textAlign: 'center' }}>\r\n                    {\r\n                        placeName && force == 'got_new_data_for_new_map' &&\r\n                        <Typography id='current_view'>You are currently viewing :&nbsp;&nbsp;{placeName}</Typography>\r\n                    }\r\n                    {\r\n                        WrappedMap &&\r\n                        <WrappedMap googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_API_KEY\r\n                            }`}\r\n                            loadingElement={<div style={{ height: `100%`, width: '100%' }} />}\r\n                            containerElement={<div style={{ height: `80%`, width: `100%` }} />}\r\n                            mapElement={<div style={{ height: `100%`, width: `100%`, borderRadius: '20px' }} />} />\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n\r\n\r\n\r\n\r\n            <span style={{ position: 'fixed', bottom: '2px', boxShadow: '5px 8px 10px #888', fontVariant: 'small-caps', color: 'white', width: '100%', background: 'black', height: '20px', textAlign: 'center' }} >© Shubham Chatterjee</span>\r\n        </div >\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Dashboard;","D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\Logout.js",[],"D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\Login.js",[],"D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\Components\\ReduxComp.js",["85"],"D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\App.js",[],"D:\\work_profession_developer\\artivaticAI\\UI_jsvscript\\src\\reportWebVitals.js",[],["86","87"],{"ruleId":"88","severity":1,"message":"89","line":34,"column":18,"nodeType":"90","messageId":"91","endLine":34,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":38,"column":21,"nodeType":"94","messageId":"95","endLine":38,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":8,"column":21,"nodeType":"94","messageId":"95","endLine":8,"endColumn":23},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":51,"column":8,"nodeType":"102","endLine":51,"endColumn":10,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"93","line":60,"column":20,"nodeType":"94","messageId":"95","endLine":60,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":60,"column":74,"nodeType":"94","messageId":"95","endLine":60,"endColumn":76},{"ruleId":"100","severity":1,"message":"101","line":69,"column":8,"nodeType":"102","endLine":69,"endColumn":36,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"93","line":83,"column":35,"nodeType":"94","messageId":"95","endLine":83,"endColumn":37},{"ruleId":"105","severity":1,"message":"106","line":98,"column":21,"nodeType":"90","messageId":"107","endLine":98,"endColumn":28},{"ruleId":"92","severity":1,"message":"108","line":173,"column":51,"nodeType":"94","messageId":"95","endLine":173,"endColumn":53},{"ruleId":"92","severity":1,"message":"93","line":178,"column":48,"nodeType":"94","messageId":"95","endLine":178,"endColumn":50},{"ruleId":"92","severity":1,"message":"93","line":181,"column":44,"nodeType":"94","messageId":"95","endLine":181,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":8,"column":21,"nodeType":"94","messageId":"95","endLine":8,"endColumn":23},{"ruleId":"96","replacedBy":"109"},{"ruleId":"98","replacedBy":"110"},"no-redeclare","'i' is already defined.","Identifier","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getlang'. Either include it or remove the dependency array.","ArrayExpression",["113"],["114"],"no-unused-vars","'placeId' is assigned a value but never used.","unusedVar","Expected '!==' and instead saw '!='.",["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [getlang]",{"range":"119","text":"120"},"Update the dependencies array to be: [LAT, LNG, placeName, force, getlang]",{"range":"121","text":"122"},[2179,2181],"[getlang]",[2983,3011],"[LAT, LNG, placeName, force, getlang]"]